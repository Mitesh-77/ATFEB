{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palak\\\\Downloads\\\\react-dashboard\\\\react-dashboard\\\\src\\\\layouts\\\\Yearly.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ReactApexChart from \"react-apexcharts\";\nimport { Form, Container, Col, Row, Button, FormGroup, Label, Input } from \"reactstrap\";\nimport cityState from '../jsondropdown/city_state.json';\nimport CapFirst from '../utils/firstletterCap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst YearlySales = () => {\n  _s();\n\n  let history = useHistory();\n  const [orderYearLabels, setOrderYearLabels] = useState([]);\n  const [categoryLabels, setCategoryLabels] = useState([]);\n  const [city, setCity] = useState(\"true\");\n  const [State, setState] = useState(\"California\");\n  const [showChart, setShowChart] = useState(false);\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {};\n\n  const formSubbmit = async () => {\n    const data = {\n      sname: State,\n      cname: city\n    };\n    await axios.post(\"/yearlySales\", data).then(result => {\n      setCategoryLabels(result.data.Category_lables);\n      setOrderYearLabels(result.data.Order_year_labels);\n      setCity(\"true\");\n      setShowChart(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getCity = stateName => {\n    if (stateName !== \"true\") {\n      let cities = cityState[stateName];\n      return cities.map((city, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: CapFirst(city)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  const states = () => {\n    var keys = Object.keys(cityState);\n    return keys.map((state, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state,\n        children: CapFirst(state)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          style: {\n            marginTop: \"24px\",\n            marginBottom: \"24px\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Research Per State and City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: \"24px\",\n            marginBottom: \"24px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: \"State\",\n                value: State,\n                onChange: e => setState(e.target.value),\n                style: {\n                  marginTop: \"24px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: true,\n                  children: \"-- select an option --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), states()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: \"city\",\n                onChange: e => setCity(e.target.value),\n                value: city,\n                style: {\n                  marginTop: \"24px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: true,\n                  children: \"-- select an option --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), getCity(State)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            padding: \"20px\",\n            textAlign: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => formSubbmit(),\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), showChart ? /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"contant-container\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            style: {\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Yearly profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: {\n                chart: {\n                  type: \"bar\",\n                  height: 430\n                },\n                title: {\n                  text: \"Profit Yearly\"\n                },\n                plotOptions: {\n                  bar: {\n                    horizontal: false,\n                    dataLabels: {\n                      position: \"top\"\n                    }\n                  }\n                },\n                dataLabels: {\n                  enabled: true,\n                  offsetX: -6,\n                  style: {\n                    fontSize: \"12px\",\n                    colors: [\"black\"]\n                  }\n                },\n                stroke: {\n                  show: true,\n                  width: 1,\n                  colors: [\"#fff\"]\n                },\n                tooltip: {\n                  shared: true,\n                  intersect: false\n                },\n                xaxis: {\n                  categories: orderYearLabels\n                }\n              },\n              series: [{\n                name: \"Office Supplies\",\n                data: [1.2, 3, 4, 4, 6]\n              }, {\n                name: \"Furniture\",\n                data: [2, 3, 4, 5, 6, 6]\n              }, {\n                name: \"Technology\",\n                data: [2, 3, 4, 5, 6]\n              }],\n              type: \"bar\",\n              height: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(YearlySales, \"ssjWc4+AV9Pem3tGq7BGMp0x6ZY=\", false, function () {\n  return [useHistory];\n});\n\n_c = YearlySales;\nexport default YearlySales;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearlySales\");","map":{"version":3,"sources":["C:/Users/palak/Downloads/react-dashboard/react-dashboard/src/layouts/Yearly.js"],"names":["React","useState","useEffect","axios","useHistory","ReactApexChart","Form","Container","Col","Row","Button","FormGroup","Label","Input","cityState","CapFirst","YearlySales","history","orderYearLabels","setOrderYearLabels","categoryLabels","setCategoryLabels","city","setCity","State","setState","showChart","setShowChart","load","formSubbmit","data","sname","cname","post","then","result","Category_lables","Order_year_labels","catch","err","console","log","getCity","stateName","cities","map","idx","states","keys","Object","state","marginTop","marginBottom","textAlign","e","target","value","padding","margin","fontWeight","chart","type","height","title","text","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","tooltip","shared","intersect","xaxis","categories","name"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport {\r\n    Form,\r\n    Container,\r\n    Col,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\"\r\nimport cityState from '../jsondropdown/city_state.json'\r\nimport CapFirst from '../utils/firstletterCap'\r\n\r\nconst YearlySales = () => {\r\n    let history = useHistory();\r\n\r\n    const [orderYearLabels, setOrderYearLabels] = useState([]);\r\n    const [categoryLabels, setCategoryLabels] = useState([])\r\n\r\n    const [city, setCity] = useState(\"true\");\r\n    const [State, setState] = useState(\"California\");\r\n    const [showChart, setShowChart] = useState(false)\r\n\r\n    useEffect(() => {\r\n        load();\r\n    }, [])\r\n\r\n\r\n    const load = async () => {\r\n\r\n    }\r\n\r\n    const formSubbmit = async () => {\r\n        const data = {\r\n            sname: State,\r\n            cname: city\r\n        }\r\n        await axios.post(\"/yearlySales\", data)\r\n            .then((result) => {\r\n                setCategoryLabels(result.data.Category_lables)\r\n                setOrderYearLabels(result.data.Order_year_labels)\r\n                setCity(\"true\")\r\n                setShowChart(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getCity = (stateName) => {\r\n        if (stateName !== \"true\") {\r\n            let cities = cityState[stateName];\r\n            return cities.map((city, idx) => {\r\n                return (\r\n                    <option key={idx} value={city}>\r\n                        {CapFirst(city)}\r\n                    </option>\r\n                );\r\n            });\r\n        }\r\n    };\r\n    const states = () => {\r\n        var keys = Object.keys(cityState);\r\n        return keys.map((state, idx) => {\r\n            return (\r\n                <option key={idx} value={state}>\r\n                    {CapFirst(state)}\r\n                </option>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main__container\">\r\n                <Form>\r\n                    <Label style={{ marginTop: \"24px\", marginBottom: \"24px\", textAlign: \"center\" }} ><h1>Research Per State and City</h1></Label>\r\n                    <Row style={{ marginTop: \"24px\", marginBottom: \"24px\" }}>\r\n                        <Col xs={5}>\r\n                            <FormGroup>\r\n                                <Label>State</Label>\r\n                                <Input\r\n                                    type='select'\r\n                                    name='State'\r\n                                    value={State}\r\n                                    onChange={(e) => setState(e.target.value)}\r\n                                    style={{ marginTop: \"24px\" }}>\r\n                                    <option selected value>\r\n                                        -- select an option --\r\n                                    </option>\r\n                                    {states()}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col xs={5}>\r\n                            <FormGroup>\r\n                                <Label>City</Label>\r\n                                <Input\r\n                                    type='select'\r\n                                    name='city'\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                    value={city}\r\n                                    style={{ marginTop: \"24px\" }}>\r\n                                    <option selected value>\r\n                                        -- select an option --\r\n                                    </option>\r\n                                    {getCity(State)}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Col style={{ padding: \"20px\", textAlign: \"left\" }}>\r\n                        <Button onClick={() => formSubbmit()} color='primary'>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Form>\r\n                {showChart ?\r\n                    <Container fluid className='contant-container'>\r\n                        <Row>\r\n                            <Col xs={3} style={{ margin: \"auto\" }}>\r\n                                <h2 style={{ fontWeight: \"bold\" }}>Yearly profit</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <ReactApexChart\r\n                                    options={{\r\n                                        chart: {\r\n                                            type: \"bar\",\r\n                                            height: 430,\r\n                                        },\r\n                                        title: {\r\n                                            text: \"Profit Yearly\",\r\n                                        },\r\n                                        plotOptions: {\r\n                                            bar: {\r\n                                                horizontal: false,\r\n                                                dataLabels: {\r\n                                                    position: \"top\",\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                        dataLabels: {\r\n                                            enabled: true,\r\n                                            offsetX: -6,\r\n                                            style: {\r\n                                                fontSize: \"12px\",\r\n                                                colors: [\"black\"],\r\n                                            },\r\n                                        },\r\n                                        stroke: {\r\n                                            show: true,\r\n                                            width: 1,\r\n                                            colors: [\"#fff\"],\r\n                                        },\r\n                                        tooltip: {\r\n                                            shared: true,\r\n                                            intersect: false,\r\n                                        },\r\n                                        xaxis: {\r\n                                            categories: orderYearLabels\r\n                                        },\r\n                                    }}\r\n                                    series={[\r\n                                        { name: \"Office Supplies\", data: [1.2, 3, 4, 4, 6] },\r\n                                        { name: \"Furniture\", data: [2, 3, 4, 5, 6, 6] },\r\n                                        { name: \"Technology\", data: [2, 3, 4, 5, 6] }\r\n                                    ]}\r\n                                    type='bar'\r\n                                    height={500}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Container> : null}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default YearlySales;"]},"metadata":{},"sourceType":"module"}