{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palak\\\\Downloads\\\\react-dashboard\\\\react-dashboard\\\\src\\\\layouts\\\\Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ReactApexChart from \"react-apexcharts\";\nimport { Form, Container, Col, Row, Button, FormGroup, Label, Input } from \"reactstrap\";\nimport catSubcat from '../jsondropdown/cat_subcat.json';\nimport cityState from '../jsondropdown/city_state.json';\nimport CapFirst from '../utils/firstletterCap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  let history = useHistory();\n  const [dataframedata, setDataframeData] = useState([]);\n  const [categorydatalabels, setCategoryDataLabels] = useState([]);\n  const [categorycountvalue, setCategoryCountValue] = useState([]);\n  const [subcategorydatalabels, setSubCategoryDataLabels] = useState([]);\n  const [subcategorycountvalue, setSubCategoryCountValue] = useState([]);\n  const [city, setCity] = useState(\"true\");\n  const [State, setState] = useState(\"California\");\n  const [showChart, setShowChart] = useState(false);\n  useEffect(() => {\n    load();\n  }, []);\n\n  const load = async () => {};\n\n  const formSubbmit = async () => {\n    const data = {\n      sname: State,\n      cname: city\n    };\n    await axios.post(\"/product_data\", data).then(result => {\n      setCategoryDataLabels(result.data.Category_lables);\n      setCategoryCountValue(result.data.Category_Values);\n      setSubCategoryDataLabels(result.data.SubCategory_lables);\n      setSubCategoryCountValue(result.data.SubCategory_Values);\n      setDataframeData(result.data.dataframe);\n      setCity(\"true\");\n      setShowChart(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getCity = stateName => {\n    if (stateName !== \"true\") {\n      let cities = cityState[stateName];\n      return cities.map((city, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: CapFirst(city)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  };\n\n  const states = () => {\n    var keys = Object.keys(cityState);\n    return keys.map((state, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: state,\n        children: CapFirst(state)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          children: \"Research Per State and City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: \"24px\",\n            marginBottom: \"24px\",\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xs-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: \"State\",\n                value: State,\n                onChange: e => setState(e.target.value),\n                style: {\n                  marginTop: \"24px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: true,\n                  children: \"-- select an option --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this), states()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                name: \"city\",\n                onChange: e => setCity(e.target.value),\n                value: city,\n                style: {\n                  marginTop: \"24px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: true,\n                  children: \"-- select an option --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), getCity(State)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            padding: \"0px\",\n            textAlign: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => formSubbmit(),\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), showChart ? /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"contant-container animate__animated animate__fadeInUpBig\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            style: {\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Success Rate Of Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: {\n                chart: {\n                  width: 500,\n                  type: \"pie\"\n                },\n                labels: categorydatalabels,\n                responsive: [{\n                  breakpoint: 480,\n                  options: {\n                    chart: {\n                      width: 300\n                    },\n                    legend: {\n                      position: \"bottom\"\n                    }\n                  }\n                }]\n              },\n              series: categorycountvalue,\n              type: \"pie\",\n              width: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            style: {\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Success Rate Of SubCategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n              options: {\n                chart: {\n                  width: 500,\n                  type: \"pie\"\n                },\n                labels: subcategorydatalabels,\n                responsive: [{\n                  breakpoint: 480,\n                  options: {\n                    chart: {\n                      width: 300\n                    },\n                    legend: {\n                      position: \"bottom\"\n                    }\n                  }\n                }]\n              },\n              series: subcategorycountvalue,\n              type: \"pie\",\n              width: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"2HKvrTwrJjvbZFx43R+VGYNJpRw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/palak/Downloads/react-dashboard/react-dashboard/src/layouts/Home.js"],"names":["React","useState","useEffect","axios","useHistory","ReactApexChart","Form","Container","Col","Row","Button","FormGroup","Label","Input","catSubcat","cityState","CapFirst","Home","history","dataframedata","setDataframeData","categorydatalabels","setCategoryDataLabels","categorycountvalue","setCategoryCountValue","subcategorydatalabels","setSubCategoryDataLabels","subcategorycountvalue","setSubCategoryCountValue","city","setCity","State","setState","showChart","setShowChart","load","formSubbmit","data","sname","cname","post","then","result","Category_lables","Category_Values","SubCategory_lables","SubCategory_Values","dataframe","catch","err","console","log","getCity","stateName","cities","map","idx","states","keys","Object","state","marginTop","marginBottom","textAlign","e","target","value","padding","margin","fontWeight","chart","width","type","labels","responsive","breakpoint","options","legend","position"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport {\r\n    Form,\r\n    Container,\r\n    Col,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\"\r\nimport catSubcat from '../jsondropdown/cat_subcat.json'\r\nimport cityState from '../jsondropdown/city_state.json'\r\nimport CapFirst from '../utils/firstletterCap'\r\n\r\nconst Home = () => {\r\n    let history = useHistory();\r\n\r\n    const [dataframedata, setDataframeData] = useState([]);\r\n    const [categorydatalabels, setCategoryDataLabels] = useState([]);\r\n    const [categorycountvalue, setCategoryCountValue] = useState([]);\r\n    const [subcategorydatalabels, setSubCategoryDataLabels] = useState([]);\r\n    const [subcategorycountvalue, setSubCategoryCountValue] = useState([]);\r\n    const [city, setCity] = useState(\"true\");\r\n    const [State, setState] = useState(\"California\");\r\n    const [showChart, setShowChart] = useState(false)\r\n\r\n    useEffect(() => {\r\n        load();\r\n    }, [])\r\n\r\n\r\n    const load = async () => {\r\n\r\n    }\r\n\r\n    const formSubbmit = async () => {\r\n        const data = {\r\n            sname: State,\r\n            cname: city\r\n        }\r\n        await axios.post(\"/product_data\", data)\r\n            .then((result) => {\r\n                setCategoryDataLabels(result.data.Category_lables)\r\n                setCategoryCountValue(result.data.Category_Values)\r\n                setSubCategoryDataLabels(result.data.SubCategory_lables)\r\n                setSubCategoryCountValue(result.data.SubCategory_Values)\r\n                setDataframeData(result.data.dataframe)\r\n                setCity(\"true\")\r\n                setShowChart(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const getCity = (stateName) => {\r\n        if (stateName !== \"true\") {\r\n            let cities = cityState[stateName];\r\n            return cities.map((city, idx) => {\r\n                return (\r\n                    <option key={idx} value={city}>\r\n                        {CapFirst(city)}\r\n                    </option>\r\n                );\r\n            });\r\n        }\r\n    };\r\n    const states = () => {\r\n        var keys = Object.keys(cityState);\r\n        return keys.map((state, idx) => {\r\n            return (\r\n                <option key={idx} value={state}>\r\n                    {CapFirst(state)}\r\n                </option>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main__container\">\r\n                <Form>\r\n                    <div className=\"head\">Research Per State and City</div>\r\n                    <Row style={{ marginTop: \"24px\", marginBottom: \"24px\", textAlign: \"left\" }}>\r\n                        <div className=\"col-xs-2\">\r\n\r\n                        </div>\r\n                        <Col xs={5}>\r\n                            <FormGroup>\r\n                                <Label>State</Label>\r\n                                <Input\r\n                                    type='select'\r\n                                    name='State'\r\n                                    value={State}\r\n                                    onChange={(e) => setState(e.target.value)}\r\n                                    style={{ marginTop: \"24px\" }}>\r\n                                    <option selected value>\r\n                                        -- select an option --\r\n                                    </option>\r\n                                    {states()}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col xs={5}>\r\n                            <FormGroup>\r\n                                <Label>City</Label>\r\n                                <Input\r\n                                    type='select'\r\n                                    name='city'\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                    value={city}\r\n                                    style={{ marginTop: \"24px\" }}>\r\n                                    <option selected value>\r\n                                        -- select an option --\r\n                                    </option>\r\n                                    {getCity(State)}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Col style={{ padding: \"0px\", textAlign: \"left\" }}>\r\n                        <Button onClick={() => formSubbmit()} color='primary'>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Form>\r\n                {\r\n                    showChart ?\r\n                        <Container fluid className='contant-container animate__animated animate__fadeInUpBig' >\r\n                            <Row>\r\n                                <Col xs={3} style={{ margin: \"auto\" }}>\r\n                                    <h2 style={{ fontWeight: \"bold\" }}>Success Rate Of Category</h2>\r\n                                </Col>\r\n                                <Col >\r\n                                    <ReactApexChart\r\n                                        options={{\r\n                                            chart: {\r\n                                                width: 500,\r\n                                                type: \"pie\",\r\n                                            },\r\n                                            labels:\r\n                                                categorydatalabels,\r\n                                            responsive: [\r\n                                                {\r\n                                                    breakpoint: 480,\r\n                                                    options: {\r\n                                                        chart: {\r\n                                                            width: 300,\r\n                                                        },\r\n                                                        legend: {\r\n                                                            position: \"bottom\",\r\n                                                        },\r\n                                                    },\r\n                                                },\r\n                                            ],\r\n                                        }}\r\n                                        series={\r\n                                            categorycountvalue\r\n                                        }\r\n                                        type='pie'\r\n                                        width={500}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={3} style={{ margin: \"auto\" }}>\r\n                                    <h2 style={{ fontWeight: \"bold\" }}>Success Rate Of SubCategory</h2>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ReactApexChart\r\n                                        options={{\r\n                                            chart: {\r\n                                                width: 500,\r\n                                                type: \"pie\",\r\n                                            },\r\n                                            labels:\r\n                                                subcategorydatalabels,\r\n                                            responsive: [\r\n                                                {\r\n                                                    breakpoint: 480,\r\n                                                    options: {\r\n                                                        chart: {\r\n                                                            width: 300,\r\n                                                        },\r\n                                                        legend: {\r\n                                                            position: \"bottom\",\r\n                                                        },\r\n                                                    },\r\n                                                },\r\n                                            ],\r\n                                        }}\r\n                                        series={\r\n                                            subcategorycountvalue\r\n                                        }\r\n                                        type='pie'\r\n                                        width={500}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container> : null\r\n                }\r\n            </div >\r\n        </main >\r\n    )\r\n}\r\n\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}